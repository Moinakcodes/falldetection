#include "BluetoothSerial.h"
#include <Wire.h>

BluetoothSerial SerialBT;

const int MPU_ADDR = 0x68;  // MPU6050 I2C address
const int buzzerPin = 4;

// Time tracking variables
unsigned long startTime;  // Stores the time when the ESP32 starts

void setup() {
    Serial.begin(115200);
    SerialBT.begin("ESP32_Fall_Detection"); // Bluetooth device name
    Wire.begin();
    pinMode(buzzerPin, OUTPUT);

    // Initialize MPU6050
    Wire.beginTransmission(MPU_ADDR);
    Wire.write(0x6B); // Power management register
    Wire.write(0);    // Wake up sensor
    Wire.endTransmission();

    // Initialize time
    startTime = millis();  // Save start time when ESP32 boots
}

// Function to read raw acceleration data
void readAcceleration(int16_t &AccX, int16_t &AccY, int16_t &AccZ) {
    Wire.beginTransmission(MPU_ADDR);
    Wire.write(0x3B); // Start reading accelerometer data
    Wire.endTransmission(false);
    Wire.requestFrom(MPU_ADDR, 6, true);

    AccX = Wire.read() << 8 | Wire.read();
    AccY = Wire.read() << 8 | Wire.read();
    AccZ = Wire.read() << 8 | Wire.read();
}
// Function to display time since the ESP32 started
void displayTime() {
    unsigned long elapsedTime = millis() - startTime;  // Time since boot in milliseconds
    unsigned long seconds = elapsedTime / 1000;
    unsigned long minutes = (seconds / 60) % 60;
    unsigned long hours = (seconds / 3600) % 24;
    SerialBT.print("Time: ");
    SerialBT.print(hours);
    SerialBT.print(":");
    SerialBT.print(minutes);
    SerialBT.print(":");
    SerialBT.print(seconds % 60);

